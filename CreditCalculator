package dd;

import javax.swing.*;
import javax.swing.border.Border;
import java.awt.*;
import java.util.ArrayList;

public class GPA_Calculator extends JFrame {

    private JTextField subjectField, creditField, gradeField;
    private JTextArea resultArea;

    private final ArrayList<Integer> credits = new ArrayList<>();
    private final ArrayList<Double> grades = new ArrayList<>();

    public GPA_Calculator() {
        // 창 설정
        setTitle("간단 학점 계산기");
        setSize(400, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());
        setLocationRelativeTo(null); // 화면 중앙에 위치

        // 전체 패널 설정
        JPanel mainPanel = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                // 그라데이션 효과 적용
                Graphics2D g2d = (Graphics2D) g;
                GradientPaint gp = new GradientPaint(0, 0, new Color(255, 204, 229), 0, getHeight(), new Color(204, 229, 255));
                g2d.setPaint(gp);
                g2d.fillRect(0, 0, getWidth(), getHeight());
            }
        };
        mainPanel.setLayout(new BorderLayout());

        // 입력 패널 생성
        JPanel inputPanel = new JPanel();
        inputPanel.setLayout(new GridBagLayout());
        inputPanel.setBackground(new Color(255, 255, 255)); // 입력 패널 배경색
        inputPanel.setBorder(BorderFactory.createTitledBorder("정보 입력"));

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(10, 10, 10, 10);

        // 과목명
        gbc.gridx = 0;
        gbc.gridy = 0;
        inputPanel.add(new JLabel("과목명:"), gbc);
        subjectField = new JTextField(15);
        gbc.gridx = 1;
        inputPanel.add(subjectField, gbc);

        // 학점
        gbc.gridx = 0;
        gbc.gridy = 1;
        inputPanel.add(new JLabel("학점:"), gbc);
        creditField = new JTextField(15);
        gbc.gridx = 1;
        inputPanel.add(creditField, gbc);

        // 성적
        gbc.gridx = 0;
        gbc.gridy = 2;
        inputPanel.add(new JLabel("성적 (A/B/C/D/F):"), gbc);
        gradeField = new JTextField(15);
        gbc.gridx = 1;
        inputPanel.add(gradeField, gbc);

        // 버튼 패널
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(new Color(255, 255, 255)); // 버튼 패널 배경색
        JButton addButton = new JButton("추가");
        JButton calculateButton = new JButton("계산");
        styleButton(addButton);
        styleButton(calculateButton);
        buttonPanel.add(addButton);
        buttonPanel.add(calculateButton);

        // 입력 패널과 버튼 패널 추가
        mainPanel.add(inputPanel, BorderLayout.NORTH);
        mainPanel.add(buttonPanel, BorderLayout.CENTER);

        // 결과 영역
        resultArea = new JTextArea();
        resultArea.setEditable(false);
        resultArea.setLineWrap(true);
        resultArea.setWrapStyleWord(true);
        resultArea.setBackground(new Color(240, 240, 255)); // 결과 영역 배경색
        resultArea.setBorder(BorderFactory.createTitledBorder("결과"));
        add(new JScrollPane(resultArea), BorderLayout.SOUTH);

        // 버튼 기능 추가
        addButton.addActionListener(e -> addEntry());
        calculateButton.addActionListener(e -> calculateGPA());

        add(mainPanel, BorderLayout.CENTER);
        setVisible(true);
    }

    private void styleButton(JButton button) {
        button.setBackground(new Color(100, 149, 237)); // 버튼 배경색
        button.setForeground(Color.WHITE); // 버튼 글자색
        button.setFocusPainted(false);
        button.setBorder(BorderFactory.createLineBorder(Color.GRAY, 2)); // 기본 테두리
        button.setFont(new Font("Noto Sans", Font.BOLD, 14)); // 한글 지원이 좋은 폰트 사용
        button.setPreferredSize(new Dimension(100, 40));

        // 라운드 테두리 적용
        Border roundedBorder = BorderFactory.createCompoundBorder(
                BorderFactory.createLineBorder(Color.GRAY, 2),
                BorderFactory.createEmptyBorder(5, 5, 5, 5)
        );
        button.setBorder(roundedBorder);
        button.setContentAreaFilled(true); // 버튼 배경을 채움
        button.setOpaque(true); // 버튼을 불투명하게 설정
        button.setCursor(new Cursor(Cursor.HAND_CURSOR)); // 마우스 커서 변경
    }

    private void addEntry() {
        try {
            int credit = Integer.parseInt(creditField.getText().trim());
            double grade = convertGradeToPoint(gradeField.getText().trim().toUpperCase());

            if (grade < 0) {
                showError("유효하지 않은 성적입니다. A, B, C, D, F만 입력하세요.");
                return;
            }

            credits.add(credit);
            grades.add(grade);
            resultArea.append(String.format("학점: %d, 성적: %.1f\n", credit, grade));

            clearFields();
        } catch (NumberFormatException e) {
            showError("학점은 숫자로 입력하세요.");
        }
    }

    private void calculateGPA() {
        if (credits.isEmpty()) {
            showError("입력된 데이터가 없습니다.");
            return;
        }

        double totalPoints = 0;
        int totalCredits = 0;

        for (int i = 0; i < credits.size(); i++) {
            totalPoints += credits.get(i) * grades.get(i);
            totalCredits += credits.get(i);
        }

        double gpa = totalCredits > 0 ? totalPoints / totalCredits : 0.0;
        resultArea.append(String.format("\n평균 GPA: %.2f\n", gpa));
    }

    private double convertGradeToPoint(String grade) {
        switch (grade) {
            case "A": return 4.0;
            case "B": return 3.0;
            case "C": return 2.0;
            case "D": return 1.0;
            case "F": return 0.0;
            default: return -1.0;
        }
    }

    private void clearFields() {
        subjectField.setText("");
        creditField.setText("");
        gradeField.setText("");
    }

    private void showError(String message) {
        JOptionPane.showMessageDialog(this, message, "오류", JOptionPane.ERROR_MESSAGE);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(GPA_Calculator::new);
    }
}
